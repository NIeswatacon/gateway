# Nome que o serviço usará para se registrar no Eureka
spring.application.name=API-GATEWAY

# O Railway fornecerá a porta para a aplicação rodar
server.port=${PORT}

# --- CONFIGURAÇÃO DO CLIENTE EUREKA (Railway) ---
# Diz ao Eureka para usar o endereço de rede privado que o Railway lhe der.
eureka.instance.hostname=${RAILWAY_PRIVATE_IP:localhost}
# URL do seu Eureka Server. Você criará a variável EUREKA_URL no painel do Railway.
eureka.client.service-url.defaultZone=${EUREKA_URL}/eureka/

# --- CONFIGURAÇÃO JWT ---
# A chave secreta será lida de uma variável de ambiente chamada JWT_SECRET no Railway.
# Deve ser a mesma chave usada no conta-service.
jwt.secret=${JWT_SECRET}

# --- CONFIGURAÇÃO DAS ROTAS DO GATEWAY ---

# Habilita a localização de serviços via Eureka para que o "lb://" funcione
spring.cloud.gateway.discovery.locator.enabled=true

# --- Rotas Públicas (Sem filtro de autenticação) ---

# Rota pública para REGISTRO de novos clientes (apenas método POST)
spring.cloud.gateway.routes[0].id=conta-registro-route
spring.cloud.gateway.routes[0].uri=lb://CONTA
spring.cloud.gateway.routes[0].predicates[0]=Path=/api/contas/clientes
spring.cloud.gateway.routes[0].predicates[1]=Method=POST

# Rota pública para LOGIN
spring.cloud.gateway.routes[1].id=conta-login-route
spring.cloud.gateway.routes[1].uri=lb://CONTA
spring.cloud.gateway.routes[1].predicates[0]=Path=/api/contas/auth/**

# --- Rotas Protegidas (Com filtro de autenticação) ---

# Rota protegida para as OUTRAS operações de clientes (GET, PUT, etc.)
spring.cloud.gateway.routes[2].id=conta-protected-route
spring.cloud.gateway.routes[2].uri=lb://CONTA
spring.cloud.gateway.routes[2].predicates[0]=Path=/api/contas/clientes/**, /api/contas/pets/**
spring.cloud.gateway.routes[2].filters[0]=AuthenticationFilter

# Rota protegida para o servicos-service
spring.cloud.gateway.routes[3].id=servicos-service-route
spring.cloud.gateway.routes[3].uri=lb://AGENDAMENTO
spring.cloud.gateway.routes[3].predicates[0]=Path=/agendamentos/**
spring.cloud.gateway.routes[3].filters[0]=AuthenticationFilter

# Rota protegida para o pagamento-service
spring.cloud.gateway.routes[4].id=pagamento-service-route
spring.cloud.gateway.routes[4].uri=lb://PAGAMENTO
spring.cloud.gateway.routes[4].predicates[0]=Path=/api/pagamentos/**
spring.cloud.gateway.routes[4].filters[0]=AuthenticationFilter

# Rota protegida para o vendas-service
spring.cloud.gateway.routes[5].id=vendas-service-route
spring.cloud.gateway.routes[5].uri=lb://VENDAS-SERVICE
spring.cloud.gateway.routes[5].predicates[0]=Path=/produtos/**, /carrinho/**
spring.cloud.gateway.routes[5].filters[0]=AuthenticationFilter